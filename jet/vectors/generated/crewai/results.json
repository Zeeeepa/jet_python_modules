{
  "chats": [
    {
      "contexts": [
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3917,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "installation.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
              "file_size": 4038,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                "node_type": 4
              },
              "2": {
                "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
                "node_type": 1
              },
              "3": {
                "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
                "metadata": {},
                "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
                "node_type": 1
              }
            },
            "start_char_idx": 1977,
            "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7471257558981677
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 16346,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "quickstart.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
              "file_size": 16608,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "88f33784-96e8-4707-a690-d419695abe03",
                "node_type": 4
              },
              "2": {
                "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
                "node_type": 1
              },
              "3": {
                "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
                "metadata": {},
                "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
                "node_type": 1
              }
            },
            "start_char_idx": 14583,
            "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.6956311549861784
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3539,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "introduction.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
              "file_size": 3585,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
                "node_type": 4
              },
              "2": {
                "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
                "node_type": 1
              }
            },
            "start_char_idx": 1691,
            "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.6877418461996314
        }
      ],
      "prompt": [
        {
          "additional_kwargs": {},
          "content": "You are a helpful assistant.",
          "role": "system"
        },
        {
          "additional_kwargs": {},
          "content": "We have provided context information below.\n---------------------\nYou're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n\n### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.\n\nThe **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>\n---------------------\nGiven this information, please answer the question: What is CrewAI?\nDon't give an answer unless it is supported by the context above.\n",
          "role": "user"
        }
      ],
      "response": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task management, and replay functionality.",
      "stream_response": [
        {
          "additional_kwargs": {},
          "delta": "C",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "C",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:19.472273Z",
            "done": false,
            "message": {
              "content": "C",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "rew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "Crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:19.585347Z",
            "done": false,
            "message": {
              "content": "rew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:19.709479Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " is",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:19.836898Z",
            "done": false,
            "message": {
              "content": " is",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " a",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:19.960243Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " platform",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.074699Z",
            "done": false,
            "message": {
              "content": " platform",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " that",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.198373Z",
            "done": false,
            "message": {
              "content": " that",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " allows",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.325406Z",
            "done": false,
            "message": {
              "content": " allows",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " you",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.447754Z",
            "done": false,
            "message": {
              "content": " you",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " to",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.561627Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " create",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.672578Z",
            "done": false,
            "message": {
              "content": " create",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " autonomous",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.779739Z",
            "done": false,
            "message": {
              "content": " autonomous",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " teams",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.88619Z",
            "done": false,
            "message": {
              "content": " teams",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " of",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:20.995228Z",
            "done": false,
            "message": {
              "content": " of",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.101766Z",
            "done": false,
            "message": {
              "content": " AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " agents",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.212019Z",
            "done": false,
            "message": {
              "content": " agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " that",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.317867Z",
            "done": false,
            "message": {
              "content": " that",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " can",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.427438Z",
            "done": false,
            "message": {
              "content": " can",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " work",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.534311Z",
            "done": false,
            "message": {
              "content": " work",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " together",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.641934Z",
            "done": false,
            "message": {
              "content": " together",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " to",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.749663Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " achieve",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.856377Z",
            "done": false,
            "message": {
              "content": " achieve",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " complex",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:21.968534Z",
            "done": false,
            "message": {
              "content": " complex",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " objectives",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.074208Z",
            "done": false,
            "message": {
              "content": " objectives",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.185961Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " It",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.291679Z",
            "done": false,
            "message": {
              "content": " It",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " provides",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.398796Z",
            "done": false,
            "message": {
              "content": " provides",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " a",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.507213Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " structured",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.612245Z",
            "done": false,
            "message": {
              "content": " structured",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " approach",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.725584Z",
            "done": false,
            "message": {
              "content": " approach",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " to",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.830163Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " defining",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:22.94061Z",
            "done": false,
            "message": {
              "content": " defining",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " agents",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.045005Z",
            "done": false,
            "message": {
              "content": " agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " and",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.153209Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " tasks",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.262704Z",
            "done": false,
            "message": {
              "content": " tasks",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.368305Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " and",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.478017Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " enables",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.584128Z",
            "done": false,
            "message": {
              "content": " enables",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " you",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.700001Z",
            "done": false,
            "message": {
              "content": " you",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " to",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.808029Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " deploy",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:23.915718Z",
            "done": false,
            "message": {
              "content": " deploy",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " your",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.027444Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.131229Z",
            "done": false,
            "message": {
              "content": " crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " in",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.243003Z",
            "done": false,
            "message": {
              "content": " in",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " a",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.353243Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " production",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.462448Z",
            "done": false,
            "message": {
              "content": " production",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " environment",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.567739Z",
            "done": false,
            "message": {
              "content": " environment",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " with",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.684228Z",
            "done": false,
            "message": {
              "content": " with",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " just",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.795721Z",
            "done": false,
            "message": {
              "content": " just",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " a",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:24.900509Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " few",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.008035Z",
            "done": false,
            "message": {
              "content": " few",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " clicks",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.11499Z",
            "done": false,
            "message": {
              "content": " clicks",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.232164Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. Crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.34944Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.457638Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " also",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.562404Z",
            "done": false,
            "message": {
              "content": " also",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " includes",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.677059Z",
            "done": false,
            "message": {
              "content": " includes",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " features",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.784113Z",
            "done": false,
            "message": {
              "content": " features",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " such",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:25.892643Z",
            "done": false,
            "message": {
              "content": " such",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " as",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.00667Z",
            "done": false,
            "message": {
              "content": " as",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " role",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.136286Z",
            "done": false,
            "message": {
              "content": " role",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "-based",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.259136Z",
            "done": false,
            "message": {
              "content": "-based",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " agents",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.366219Z",
            "done": false,
            "message": {
              "content": " agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.478215Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " flexible",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.603287Z",
            "done": false,
            "message": {
              "content": " flexible",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " tools",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.722579Z",
            "done": false,
            "message": {
              "content": " tools",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.84849Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " intelligent",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:26.964355Z",
            "done": false,
            "message": {
              "content": " intelligent",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " collaboration",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:27.091536Z",
            "done": false,
            "message": {
              "content": " collaboration",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:27.215454Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " task",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:27.342238Z",
            "done": false,
            "message": {
              "content": " task",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " management",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task management",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:27.464983Z",
            "done": false,
            "message": {
              "content": " management",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task management,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:27.592443Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " and",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task management, and",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:27.717449Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " replay",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task management, and replay",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:27.844967Z",
            "done": false,
            "message": {
              "content": " replay",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " functionality",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task management, and replay functionality",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:27.96841Z",
            "done": false,
            "message": {
              "content": " functionality",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task management, and replay functionality.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:28.098524Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "CrewAI is a platform that allows you to create autonomous teams of AI agents that can work together to achieve complex objectives. It provides a structured approach to defining agents and tasks, and enables you to deploy your crew in a production environment with just a few clicks. CrewAI also includes features such as role-based agents, flexible tools, intelligent collaboration, task management, and replay functionality.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:54:28.223599Z",
            "done": true,
            "done_reason": "stop",
            "eval_count": 78,
            "eval_duration": 8756000000,
            "load_duration": 48954583,
            "message": {
              "content": "",
              "role": "assistant"
            },
            "model": "llama3.1",
            "prompt_eval_count": 1390,
            "prompt_eval_duration": 18884000000,
            "total_duration": 27701888041,
            "usage": {
              "completion_tokens": 78,
              "prompt_tokens": 1390,
              "total_tokens": 1468
            }
          }
        }
      ]
    },
    {
      "contexts": [
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3917,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "installation.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
              "file_size": 4038,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                "node_type": 4
              },
              "2": {
                "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
                "node_type": 1
              },
              "3": {
                "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
                "metadata": {},
                "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
                "node_type": 1
              }
            },
            "start_char_idx": 1977,
            "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7432651616223774
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 16346,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "quickstart.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
              "file_size": 16608,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "88f33784-96e8-4707-a690-d419695abe03",
                "node_type": 4
              },
              "2": {
                "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
                "node_type": 1
              },
              "3": {
                "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
                "metadata": {},
                "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
                "node_type": 1
              }
            },
            "start_char_idx": 14583,
            "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7150258915452291
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3539,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "introduction.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
              "file_size": 3585,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
                "node_type": 4
              },
              "2": {
                "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
                "node_type": 1
              }
            },
            "start_char_idx": 1691,
            "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7070298707112223
        }
      ],
      "prompt": [
        {
          "additional_kwargs": {},
          "content": "You are a helpful assistant.",
          "role": "system"
        },
        {
          "additional_kwargs": {},
          "content": "We have provided context information below.\n---------------------\nYou're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n\n### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.\n\nThe **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>\n---------------------\nGiven this information, please answer the question: How do I use CrewAI?\nDon't give an answer unless it is supported by the context above.\n",
          "role": "user"
        }
      ],
      "response": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your experiences.",
      "stream_response": [
        {
          "additional_kwargs": {},
          "delta": "To",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:36.715937Z",
            "done": false,
            "message": {
              "content": "To",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " use",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:36.842104Z",
            "done": false,
            "message": {
              "content": " use",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use Crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:36.968422Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:37.085152Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:37.207786Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " you",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:37.339201Z",
            "done": false,
            "message": {
              "content": " you",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " can",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:37.468787Z",
            "done": false,
            "message": {
              "content": " can",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " follow",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:37.600845Z",
            "done": false,
            "message": {
              "content": " follow",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " these",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:37.72845Z",
            "done": false,
            "message": {
              "content": " these",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " steps",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:37.862245Z",
            "done": false,
            "message": {
              "content": " steps",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ":\n\n",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:37.98666Z",
            "done": false,
            "message": {
              "content": ":\n\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": 1,
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:38.108887Z",
            "done": false,
            "message": {
              "content": 1,
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:38.233361Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Install",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:38.366137Z",
            "done": false,
            "message": {
              "content": " Install",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install Crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:38.490671Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:38.624654Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " in",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:38.751292Z",
            "done": false,
            "message": {
              "content": " in",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " your",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:38.88427Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " development",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:39.007322Z",
            "done": false,
            "message": {
              "content": " development",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " environment",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:39.144761Z",
            "done": false,
            "message": {
              "content": " environment",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".\n",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:39.268092Z",
            "done": false,
            "message": {
              "content": ".\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": 2,
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:39.391839Z",
            "done": false,
            "message": {
              "content": 2,
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:39.514324Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Create",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:39.634565Z",
            "done": false,
            "message": {
              "content": " Create",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " a",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:39.766117Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " new",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:39.884103Z",
            "done": false,
            "message": {
              "content": " new",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " project",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:40.014049Z",
            "done": false,
            "message": {
              "content": " project",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " using",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:40.131539Z",
            "done": false,
            "message": {
              "content": " using",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " the",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:40.256047Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:40.391671Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:40.513809Z",
            "done": false,
            "message": {
              "content": "crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "ai",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:40.649437Z",
            "done": false,
            "message": {
              "content": "ai",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " create",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:40.773389Z",
            "done": false,
            "message": {
              "content": " create",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:40.909348Z",
            "done": false,
            "message": {
              "content": " crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " <project",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:41.164351Z",
            "done": false,
            "message": {
              "content": " <project",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "_name",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:41.287517Z",
            "done": false,
            "message": {
              "content": "_name",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ">`",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>`",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:41.428958Z",
            "done": false,
            "message": {
              "content": ">`",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " command",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:41.566927Z",
            "done": false,
            "message": {
              "content": " command",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".\n",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:41.704838Z",
            "done": false,
            "message": {
              "content": ".\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": 3,
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:41.833781Z",
            "done": false,
            "message": {
              "content": 3,
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:41.971456Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Customize",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:42.112383Z",
            "done": false,
            "message": {
              "content": " Customize",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " your",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:42.24561Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " project",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:42.394854Z",
            "done": false,
            "message": {
              "content": " project",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " by",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:42.530741Z",
            "done": false,
            "message": {
              "content": " by",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " editing",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:42.657445Z",
            "done": false,
            "message": {
              "content": " editing",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " the",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:42.787392Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " essential",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:42.932416Z",
            "done": false,
            "message": {
              "content": " essential",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " files",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:43.07451Z",
            "done": false,
            "message": {
              "content": " files",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " such",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:43.217627Z",
            "done": false,
            "message": {
              "content": " such",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " as",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:43.360568Z",
            "done": false,
            "message": {
              "content": " as",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:43.499863Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "agents",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:43.648033Z",
            "done": false,
            "message": {
              "content": "agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".yaml",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:43.783576Z",
            "done": false,
            "message": {
              "content": ".yaml",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "`,",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:43.933169Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:44.07739Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "tasks",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:44.221618Z",
            "done": false,
            "message": {
              "content": "tasks",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".yaml",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:44.365848Z",
            "done": false,
            "message": {
              "content": ".yaml",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "`,",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:44.504835Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " and",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:44.652137Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `.",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:44.789349Z",
            "done": false,
            "message": {
              "content": " `.",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "env",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:44.924489Z",
            "done": false,
            "message": {
              "content": "env",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "`.\n",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:45.065938Z",
            "done": false,
            "message": {
              "content": "`.\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": 4,
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:45.205188Z",
            "done": false,
            "message": {
              "content": 4,
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:45.350152Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Define",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:45.49103Z",
            "done": false,
            "message": {
              "content": " Define",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " your",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:45.626691Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:45.767367Z",
            "done": false,
            "message": {
              "content": " AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " agents",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:45.913796Z",
            "done": false,
            "message": {
              "content": " agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:46.057302Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " tasks",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:46.203674Z",
            "done": false,
            "message": {
              "content": " tasks",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:46.347518Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " and",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:46.488831Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " workflows",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:46.637963Z",
            "done": false,
            "message": {
              "content": " workflows",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " using",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:46.782377Z",
            "done": false,
            "message": {
              "content": " using",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " annotations",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:46.928308Z",
            "done": false,
            "message": {
              "content": " annotations",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " like",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:47.065475Z",
            "done": false,
            "message": {
              "content": " like",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:47.198784Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "@",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:47.330109Z",
            "done": false,
            "message": {
              "content": "@",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "agent",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:47.473189Z",
            "done": false,
            "message": {
              "content": "agent",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "`,",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:47.619056Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:47.758373Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "@",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:47.90438Z",
            "done": false,
            "message": {
              "content": "@",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "task",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:48.041058Z",
            "done": false,
            "message": {
              "content": "task",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "`,",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:48.182564Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:48.327926Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "@",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:48.471234Z",
            "done": false,
            "message": {
              "content": "@",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:48.615813Z",
            "done": false,
            "message": {
              "content": "crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "`,",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:48.753355Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " etc",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:48.897168Z",
            "done": false,
            "message": {
              "content": " etc",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".\n",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:49.030979Z",
            "done": false,
            "message": {
              "content": ".\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": 5,
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:49.172485Z",
            "done": false,
            "message": {
              "content": 5,
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:49.317453Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Use",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:49.461936Z",
            "done": false,
            "message": {
              "content": " Use",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " the",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:49.606167Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the Crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:49.743072Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:49.875823Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " CLI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:50.014564Z",
            "done": false,
            "message": {
              "content": " CLI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " commands",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:50.151377Z",
            "done": false,
            "message": {
              "content": " commands",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " to",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:50.283696Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " run",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:50.430265Z",
            "done": false,
            "message": {
              "content": " run",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " and",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:50.574213Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " manage",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:50.716061Z",
            "done": false,
            "message": {
              "content": " manage",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " your",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:50.860923Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:50.999865Z",
            "done": false,
            "message": {
              "content": " crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:51.149145Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " such",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:51.282488Z",
            "done": false,
            "message": {
              "content": " such",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " as",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:51.425841Z",
            "done": false,
            "message": {
              "content": " as",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:51.566757Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:51.705847Z",
            "done": false,
            "message": {
              "content": "crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "ai",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:51.848824Z",
            "done": false,
            "message": {
              "content": "ai",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " replay",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:51.98648Z",
            "done": false,
            "message": {
              "content": " replay",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " <task",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:52.255474Z",
            "done": false,
            "message": {
              "content": " <task",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "_id",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:52.380031Z",
            "done": false,
            "message": {
              "content": "_id",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ">`",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>`",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:52.50998Z",
            "done": false,
            "message": {
              "content": ">`",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " and",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:52.650326Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " `",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:52.781086Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:52.923086Z",
            "done": false,
            "message": {
              "content": "crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "ai",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:53.064822Z",
            "done": false,
            "message": {
              "content": "ai",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " reset",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:53.20588Z",
            "done": false,
            "message": {
              "content": " reset",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "-m",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-m",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:53.342109Z",
            "done": false,
            "message": {
              "content": "-m",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "em",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-mem",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:53.479776Z",
            "done": false,
            "message": {
              "content": "em",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "ories",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:53.621449Z",
            "done": false,
            "message": {
              "content": "ories",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " --",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:53.751506Z",
            "done": false,
            "message": {
              "content": " --",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "all",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:53.893496Z",
            "done": false,
            "message": {
              "content": "all",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "`.\n\n",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\n",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:54.025975Z",
            "done": false,
            "message": {
              "content": "`.\n\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "You",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:54.170083Z",
            "done": false,
            "message": {
              "content": "You",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " can",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:54.298137Z",
            "done": false,
            "message": {
              "content": " can",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " also",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:54.436989Z",
            "done": false,
            "message": {
              "content": " also",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " deploy",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:54.579276Z",
            "done": false,
            "message": {
              "content": " deploy",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " your",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:54.715653Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " project",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:54.857997Z",
            "done": false,
            "message": {
              "content": " project",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " on",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:54.990908Z",
            "done": false,
            "message": {
              "content": " on",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on Crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:55.117833Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:55.250943Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Enterprise",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:55.385097Z",
            "done": false,
            "message": {
              "content": " Enterprise",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " for",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:55.522866Z",
            "done": false,
            "message": {
              "content": " for",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " a",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:55.664138Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " production",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:55.793061Z",
            "done": false,
            "message": {
              "content": " production",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "-ready",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:55.937891Z",
            "done": false,
            "message": {
              "content": "-ready",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " environment",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:56.080179Z",
            "done": false,
            "message": {
              "content": " environment",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".\n\n",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\n",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:56.216642Z",
            "done": false,
            "message": {
              "content": ".\n\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "Additionally",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:56.348536Z",
            "done": false,
            "message": {
              "content": "Additionally",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:56.488026Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " you",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:56.631557Z",
            "done": false,
            "message": {
              "content": " you",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " can",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:56.762166Z",
            "done": false,
            "message": {
              "content": " can",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " join",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:56.904023Z",
            "done": false,
            "message": {
              "content": " join",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " the",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:57.033707Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " Crew",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the Crew",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:57.177138Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "AI",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:57.312994Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " community",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:57.448692Z",
            "done": false,
            "message": {
              "content": " community",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " to",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:57.578687Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " connect",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:57.71996Z",
            "done": false,
            "message": {
              "content": " connect",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " with",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:57.862189Z",
            "done": false,
            "message": {
              "content": " with",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " other",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:57.997744Z",
            "done": false,
            "message": {
              "content": " other",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " developers",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:58.148367Z",
            "done": false,
            "message": {
              "content": " developers",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:58.280988Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " get",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:58.407934Z",
            "done": false,
            "message": {
              "content": " get",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " help",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:58.536044Z",
            "done": false,
            "message": {
              "content": " help",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ",",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help,",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:58.679743Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " and",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:58.824138Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " share",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:58.967951Z",
            "done": false,
            "message": {
              "content": " share",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " your",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:59.115951Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": " experiences",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your experiences",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:59.255649Z",
            "done": false,
            "message": {
              "content": " experiences",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": ".",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your experiences.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:59.4Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          }
        },
        {
          "additional_kwargs": {},
          "delta": "",
          "logprobs": null,
          "message": {
            "additional_kwargs": {
              "tool_calls": []
            },
            "content": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to run and manage your crew, such as `crewai replay <task_id>` and `crewai reset-memories --all`.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your experiences.",
            "role": "assistant"
          },
          "raw": {
            "created_at": "2024-12-09T18:55:59.533338Z",
            "done": true,
            "done_reason": "stop",
            "eval_count": 168,
            "eval_duration": 22822000000,
            "load_duration": 45986042,
            "message": {
              "content": "",
              "role": "assistant"
            },
            "model": "llama3.1",
            "prompt_eval_count": 1392,
            "prompt_eval_duration": 23849000000,
            "total_duration": 46728463792,
            "usage": {
              "completion_tokens": 168,
              "prompt_tokens": 1392,
              "total_tokens": 1560
            }
          }
        }
      ]
    }
  ],
  "hyde": {
    "metadata": {
      "408b1edc-04e4-40c5-b157-b817ff51a5b9": {
        "creation_date": "2024-12-07",
        "file_name": "installation.mdx",
        "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
        "file_size": 4038,
        "last_modified_date": "2024-12-07"
      },
      "6672642f-5ca9-4a54-bd06-ca30b282d0ab": {
        "creation_date": "2024-12-07",
        "file_name": "introduction.mdx",
        "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
        "file_size": 3585,
        "last_modified_date": "2024-12-07"
      },
      "b2704ea8-6980-47ce-bd68-7ced36a6565e": {
        "creation_date": "2024-12-07",
        "file_name": "quickstart.mdx",
        "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
        "file_size": 16608,
        "last_modified_date": "2024-12-07"
      },
      "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8": {
        "creation_date": "2024-12-07",
        "file_name": "installation.mdx",
        "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
        "file_size": 4038,
        "last_modified_date": "2024-12-07"
      }
    },
    "query": "How do I use CrewAI?",
    "response": "To get started with CrewAI, you can follow these steps:\n\n1. Install CrewAI using either `pip install 'crewai[tools]'` or `pip install crewai crewai-tools`. This will install the core package and additional tools needed for most use cases.\n2. If you have an older version of CrewAI installed, you can upgrade it by running `pip install --upgrade crewai crewai-tools`.\n3. Verify your installation by checking your installed versions with `pip freeze | grep crewai`.\n\nAdditionally, you can explore the following features and resources to get hands-on experience:\n\n* Use the `crewai create crew <project_name>` command to generate a new project structure.\n* Customize your project by editing essential files such as `agents.yaml`, `tasks.yaml`, `.env`, `main.py`, `crew.py`, and `tools/`.\n* Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n* Join the community to connect with other developers, get help, and share your CrewAI experiences.\n\nBy following these steps and exploring the available resources, you'll be well on your way to using CrewAI effectively.",
    "source_nodes": [
      {
        "node": {
          "embedding": null,
          "end_char_idx": 3539,
          "excluded_embed_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "excluded_llm_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
          "metadata": {
            "creation_date": "2024-12-07",
            "file_name": "introduction.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
            "file_size": 3585,
            "last_modified_date": "2024-12-07"
          },
          "metadata_separator": "\n",
          "metadata_seperator": "\n",
          "metadata_template": "{key}: {value}",
          "mimetype": "text/plain",
          "relationships": {
            "1": {
              "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "introduction.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                "file_size": 3585,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
              "node_type": 4
            },
            "2": {
              "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "introduction.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                "file_size": 3585,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
              "node_type": 1
            }
          },
          "start_char_idx": 1691,
          "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
          "text_template": "{metadata_str}\n\n{content}"
        },
        "score": 0.8058111758942734
      },
      {
        "node": {
          "embedding": null,
          "end_char_idx": 3917,
          "excluded_embed_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "excluded_llm_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
          "metadata": {
            "creation_date": "2024-12-07",
            "file_name": "installation.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
            "file_size": 4038,
            "last_modified_date": "2024-12-07"
          },
          "metadata_separator": "\n",
          "metadata_seperator": "\n",
          "metadata_template": "{key}: {value}",
          "mimetype": "text/plain",
          "relationships": {
            "1": {
              "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "installation.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                "file_size": 4038,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
              "node_type": 4
            },
            "2": {
              "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "installation.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                "file_size": 4038,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
              "node_type": 1
            },
            "3": {
              "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
              "metadata": {},
              "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
              "node_type": 1
            }
          },
          "start_char_idx": 1977,
          "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
          "text_template": "{metadata_str}\n\n{content}"
        },
        "score": 0.8049178582278051
      },
      {
        "node": {
          "embedding": null,
          "end_char_idx": 16346,
          "excluded_embed_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "excluded_llm_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
          "metadata": {
            "creation_date": "2024-12-07",
            "file_name": "quickstart.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
            "file_size": 16608,
            "last_modified_date": "2024-12-07"
          },
          "metadata_separator": "\n",
          "metadata_seperator": "\n",
          "metadata_template": "{key}: {value}",
          "mimetype": "text/plain",
          "relationships": {
            "1": {
              "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "quickstart.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                "file_size": 16608,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "88f33784-96e8-4707-a690-d419695abe03",
              "node_type": 4
            },
            "2": {
              "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "quickstart.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                "file_size": 16608,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
              "node_type": 1
            },
            "3": {
              "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
              "metadata": {},
              "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
              "node_type": 1
            }
          },
          "start_char_idx": 14583,
          "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
          "text_template": "{metadata_str}\n\n{content}"
        },
        "score": 0.7943498377195491
      },
      {
        "node": {
          "embedding": null,
          "end_char_idx": 1976,
          "excluded_embed_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "excluded_llm_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "id_": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
          "metadata": {
            "creation_date": "2024-12-07",
            "file_name": "installation.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
            "file_size": 4038,
            "last_modified_date": "2024-12-07"
          },
          "metadata_separator": "\n",
          "metadata_seperator": "\n",
          "metadata_template": "{key}: {value}",
          "mimetype": "text/plain",
          "relationships": {
            "1": {
              "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "installation.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                "file_size": 4038,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
              "node_type": 4
            },
            "3": {
              "hash": "c1847cd1ab190db35d68e9a6c8118ac250a933ee1d4898726c64f1420cb1748b",
              "metadata": {},
              "node_id": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
              "node_type": 1
            }
          },
          "start_char_idx": 0,
          "text": "---\ntitle: Installation\ndescription: Get started with CrewAI - Install, configure, and build your first AI crew\nicon: wrench\n---\n\n<Note>\n  **Python Version Requirements**\n  \n  CrewAI requires `Python >=3.10 and <=3.13`. Here's how to check your version:\n  ```bash\n  python3 --version\n  ```\n  \n  If you need to update Python, visit [python.org/downloads](https://python.org/downloads)\n</Note>\n\n# Installing CrewAI\n\nCrewAI is a flexible and powerful AI framework that enables you to create and manage AI agents, tools, and tasks efficiently. \nLet's get you set up! \ud83d\ude80\n\n<Steps>\n    <Step title=\"Install CrewAI\">\n        Install CrewAI with all recommended tools using either method:\n        ```shell Terminal\n        pip install 'crewai[tools]'\n        ```\n        or\n        ```shell Terminal\n        pip install crewai crewai-tools\n        ```\n\n        <Note>\n          Both methods install the core package and additional tools needed for most use cases.\n        </Note>\n    </Step>\n\n    <Step title=\"Upgrade CrewAI (Existing Installations Only)\">\n        If you have an older version of CrewAI installed, you can upgrade it:\n        ```shell Terminal\n        pip install --upgrade crewai crewai-tools\n        ```\n\n        <Warning>\n            If you see a Poetry-related warning, you'll need to migrate to our new dependency manager:\n            ```shell Terminal\n            crewai update\n            ```\n            This will update your project to use [UV](https://github.com/astral-sh/uv), our new faster dependency manager.\n        </Warning>\n\n        <Note>\n            Skip this step if you're doing a fresh installation.\n        </Note>\n    </Step>\n\n    <Step title=\"Verify Installation\">\n        Check your installed versions:\n        ```shell Terminal\n        pip freeze | grep crewai\n        ```\n\n        You should see something like:\n        ```markdown Output\n        crewai==X.X.X\n        crewai-tools==X.X.X\n        ```\n        <Check>Installation successful!",
          "text_template": "{metadata_str}\n\n{content}"
        },
        "score": 0.7718860866357501
      }
    ]
  },
  "initial_query": {
    "query": "How do I use CrewAI?",
    "response": {
      "metadata": {
        "408b1edc-04e4-40c5-b157-b817ff51a5b9": {
          "creation_date": "2024-12-07",
          "file_name": "installation.mdx",
          "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
          "file_size": 4038,
          "last_modified_date": "2024-12-07"
        },
        "6672642f-5ca9-4a54-bd06-ca30b282d0ab": {
          "creation_date": "2024-12-07",
          "file_name": "introduction.mdx",
          "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
          "file_size": 3585,
          "last_modified_date": "2024-12-07"
        },
        "a8c07938-c80c-4558-966c-d9cb56057f36": {
          "creation_date": "2024-12-07",
          "file_name": "quickstart.mdx",
          "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
          "file_size": 16608,
          "last_modified_date": "2024-12-07"
        },
        "b2704ea8-6980-47ce-bd68-7ced36a6565e": {
          "creation_date": "2024-12-07",
          "file_name": "quickstart.mdx",
          "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
          "file_size": 16608,
          "last_modified_date": "2024-12-07"
        },
        "b4776b3c-83eb-4e47-9876-a89a24da049a": {
          "creation_date": "2024-12-07",
          "file_name": "installation.mdx",
          "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
          "file_size": 4038,
          "last_modified_date": "2024-12-07"
        },
        "c36ffb47-e43b-4021-8265-693075bc839b": {
          "creation_date": "2024-12-07",
          "file_name": "installation.mdx",
          "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
          "file_size": 4038,
          "last_modified_date": "2024-12-07"
        },
        "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8": {
          "creation_date": "2024-12-07",
          "file_name": "installation.mdx",
          "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
          "file_size": 4038,
          "last_modified_date": "2024-12-07"
        },
        "f5190999-0daf-4e6d-9cfb-d7ba4ad88411": {
          "creation_date": "2024-12-07",
          "file_name": "introduction.mdx",
          "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
          "file_size": 3585,
          "last_modified_date": "2024-12-07"
        }
      },
      "response": "To get started with CrewAI, you can follow our quickstart guide to create your first CrewAI agent and get hands-on experience. You can also join the community to connect with other developers, get help, and share your CrewAI experiences.\n\nAdditionally, you can install CrewAI using either of the following methods:\n\n* `pip install 'crewai[tools]'`\n* `pip install crewai crewai-tools`\n\nIf you have an older version of CrewAI installed, you can upgrade it by running `pip install --upgrade crewai crewai-tools`. This will update your project to use our new dependency manager.\n\nOnce installed, you can verify the installation by running `pip freeze | grep crewai`, which should show you the installed versions of CrewAI and its tools.",
      "source_nodes": [
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3917,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "installation.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
              "file_size": 4038,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                "node_type": 4
              },
              "2": {
                "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
                "node_type": 1
              },
              "3": {
                "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
                "metadata": {},
                "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
                "node_type": 1
              }
            },
            "start_char_idx": 1977,
            "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7432651616223774
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 16346,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "quickstart.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
              "file_size": 16608,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "88f33784-96e8-4707-a690-d419695abe03",
                "node_type": 4
              },
              "2": {
                "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
                "node_type": 1
              },
              "3": {
                "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
                "metadata": {},
                "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
                "node_type": 1
              }
            },
            "start_char_idx": 14583,
            "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7150258915452291
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3539,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "introduction.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
              "file_size": 3585,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
                "node_type": 4
              },
              "2": {
                "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
                "node_type": 1
              }
            },
            "start_char_idx": 1691,
            "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7070298707112223
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 1976,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "installation.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
              "file_size": 4038,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                "node_type": 4
              },
              "3": {
                "hash": "c1847cd1ab190db35d68e9a6c8118ac250a933ee1d4898726c64f1420cb1748b",
                "metadata": {},
                "node_id": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
                "node_type": 1
              }
            },
            "start_char_idx": 0,
            "text": "---\ntitle: Installation\ndescription: Get started with CrewAI - Install, configure, and build your first AI crew\nicon: wrench\n---\n\n<Note>\n  **Python Version Requirements**\n  \n  CrewAI requires `Python >=3.10 and <=3.13`. Here's how to check your version:\n  ```bash\n  python3 --version\n  ```\n  \n  If you need to update Python, visit [python.org/downloads](https://python.org/downloads)\n</Note>\n\n# Installing CrewAI\n\nCrewAI is a flexible and powerful AI framework that enables you to create and manage AI agents, tools, and tasks efficiently. \nLet's get you set up! \ud83d\ude80\n\n<Steps>\n    <Step title=\"Install CrewAI\">\n        Install CrewAI with all recommended tools using either method:\n        ```shell Terminal\n        pip install 'crewai[tools]'\n        ```\n        or\n        ```shell Terminal\n        pip install crewai crewai-tools\n        ```\n\n        <Note>\n          Both methods install the core package and additional tools needed for most use cases.\n        </Note>\n    </Step>\n\n    <Step title=\"Upgrade CrewAI (Existing Installations Only)\">\n        If you have an older version of CrewAI installed, you can upgrade it:\n        ```shell Terminal\n        pip install --upgrade crewai crewai-tools\n        ```\n\n        <Warning>\n            If you see a Poetry-related warning, you'll need to migrate to our new dependency manager:\n            ```shell Terminal\n            crewai update\n            ```\n            This will update your project to use [UV](https://github.com/astral-sh/uv), our new faster dependency manager.\n        </Warning>\n\n        <Note>\n            Skip this step if you're doing a fresh installation.\n        </Note>\n    </Step>\n\n    <Step title=\"Verify Installation\">\n        Check your installed versions:\n        ```shell Terminal\n        pip freeze | grep crewai\n        ```\n\n        You should see something like:\n        ```markdown Output\n        crewai==X.X.X\n        crewai-tools==X.X.X\n        ```\n        <Check>Installation successful!",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7053313294125978
        }
      ]
    }
  },
  "initial_query_nodes": {
    "query": "How do I use CrewAI?",
    "response": [
      {
        "node": {
          "embedding": null,
          "end_char_idx": 3917,
          "excluded_embed_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "excluded_llm_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
          "metadata": {
            "creation_date": "2024-12-07",
            "file_name": "installation.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
            "file_size": 4038,
            "last_modified_date": "2024-12-07",
            "retrieval_score": 1.467395305633545
          },
          "metadata_separator": "\n",
          "metadata_seperator": "\n",
          "metadata_template": "{key}: {value}",
          "mimetype": "text/plain",
          "relationships": {
            "1": {
              "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "installation.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                "file_size": 4038,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
              "node_type": 4
            },
            "2": {
              "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "installation.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                "file_size": 4038,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
              "node_type": 1
            },
            "3": {
              "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
              "metadata": {},
              "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
              "node_type": 1
            }
          },
          "start_char_idx": 1977,
          "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
          "text_template": "{metadata_str}\n\n{content}"
        },
        "score": 0.6131642460823059
      },
      {
        "node": {
          "embedding": null,
          "end_char_idx": 16346,
          "excluded_embed_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "excluded_llm_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
          "metadata": {
            "creation_date": "2024-12-07",
            "file_name": "quickstart.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
            "file_size": 16608,
            "last_modified_date": "2024-12-07",
            "retrieval_score": 3.305917263031006
          },
          "metadata_separator": "\n",
          "metadata_seperator": "\n",
          "metadata_template": "{key}: {value}",
          "mimetype": "text/plain",
          "relationships": {
            "1": {
              "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "quickstart.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                "file_size": 16608,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "88f33784-96e8-4707-a690-d419695abe03",
              "node_type": 4
            },
            "2": {
              "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "quickstart.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                "file_size": 16608,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
              "node_type": 1
            },
            "3": {
              "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
              "metadata": {},
              "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
              "node_type": 1
            }
          },
          "start_char_idx": 14583,
          "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
          "text_template": "{metadata_str}\n\n{content}"
        },
        "score": 0.6395506262779236
      },
      {
        "node": {
          "embedding": null,
          "end_char_idx": 3539,
          "excluded_embed_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "excluded_llm_metadata_keys": [
            "file_name",
            "file_type",
            "file_size",
            "creation_date",
            "last_modified_date",
            "last_accessed_date"
          ],
          "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
          "metadata": {
            "creation_date": "2024-12-07",
            "file_name": "introduction.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
            "file_size": 3585,
            "last_modified_date": "2024-12-07",
            "retrieval_score": 4.413860321044922
          },
          "metadata_separator": "\n",
          "metadata_seperator": "\n",
          "metadata_template": "{key}: {value}",
          "mimetype": "text/plain",
          "relationships": {
            "1": {
              "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "introduction.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                "file_size": 3585,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
              "node_type": 4
            },
            "2": {
              "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "introduction.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                "file_size": 3585,
                "last_modified_date": "2024-12-07"
              },
              "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
              "node_type": 1
            }
          },
          "start_char_idx": 1691,
          "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
          "text_template": "{metadata_str}\n\n{content}"
        },
        "score": 0.6411206722259521
      }
    ]
  },
  "multi_step": {
    "query": "How do I use CrewAI?",
    "response": {
      "metadata": {
        "sub_qa": []
      },
      "response": "Empty Response",
      "source_nodes": []
    }
  },
  "questions": [
    {
      "contexts": [
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3917,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "installation.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
              "file_size": 4038,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                "node_type": 4
              },
              "2": {
                "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
                "node_type": 1
              },
              "3": {
                "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
                "metadata": {},
                "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
                "node_type": 1
              }
            },
            "start_char_idx": 1977,
            "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7471257558981677
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 16346,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "quickstart.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
              "file_size": 16608,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "88f33784-96e8-4707-a690-d419695abe03",
                "node_type": 4
              },
              "2": {
                "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
                "node_type": 1
              },
              "3": {
                "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
                "metadata": {},
                "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
                "node_type": 1
              }
            },
            "start_char_idx": 14583,
            "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.6956311549861784
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3539,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "introduction.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
              "file_size": 3585,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
                "node_type": 4
              },
              "2": {
                "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
                "node_type": 1
              }
            },
            "start_char_idx": 1691,
            "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.6877418461996314
        }
      ],
      "messages": "We have provided context information below.\n---------------------\nYou're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n\n### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.\n\nThe **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>\n---------------------\nGiven this information, please answer the question: What is CrewAI?\nDon't give an answer unless it is supported by the context above.\n",
      "response": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it suitable for production-ready applications.",
      "stream_response": [
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "C",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:53.736031Z",
            "done": false,
            "message": {
              "content": "C",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "C"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "rew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:53.847336Z",
            "done": false,
            "message": {
              "content": "rew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "Crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "AI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:53.958444Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " appears",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.066542Z",
            "done": false,
            "message": {
              "content": " appears",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " to",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.175023Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " be",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.282739Z",
            "done": false,
            "message": {
              "content": " be",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " a",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.394631Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " platform",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.528625Z",
            "done": false,
            "message": {
              "content": " platform",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " or",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.644873Z",
            "done": false,
            "message": {
              "content": " or",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " framework",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.755975Z",
            "done": false,
            "message": {
              "content": " framework",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " for",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.863337Z",
            "done": false,
            "message": {
              "content": " for",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " building",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:54.974502Z",
            "done": false,
            "message": {
              "content": " building",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " autonomous",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.081907Z",
            "done": false,
            "message": {
              "content": " autonomous",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " teams",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.198779Z",
            "done": false,
            "message": {
              "content": " teams",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " of",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.306184Z",
            "done": false,
            "message": {
              "content": " of",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " AI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.413411Z",
            "done": false,
            "message": {
              "content": " AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " agents",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.520918Z",
            "done": false,
            "message": {
              "content": " agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " that",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.628703Z",
            "done": false,
            "message": {
              "content": " that",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " can",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.740758Z",
            "done": false,
            "message": {
              "content": " can",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " work",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.846841Z",
            "done": false,
            "message": {
              "content": " work",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " together",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:55.956995Z",
            "done": false,
            "message": {
              "content": " together",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " to",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.063163Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " achieve",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.173877Z",
            "done": false,
            "message": {
              "content": " achieve",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " complex",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.279509Z",
            "done": false,
            "message": {
              "content": " complex",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " tasks",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.384406Z",
            "done": false,
            "message": {
              "content": " tasks",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " and",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.495558Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " goals",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.601341Z",
            "done": false,
            "message": {
              "content": " goals",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.714364Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " It",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.818147Z",
            "done": false,
            "message": {
              "content": " It",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " provides",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:56.928567Z",
            "done": false,
            "message": {
              "content": " provides",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " features",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.033678Z",
            "done": false,
            "message": {
              "content": " features",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " such",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.143944Z",
            "done": false,
            "message": {
              "content": " such",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " as",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.251203Z",
            "done": false,
            "message": {
              "content": " as",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " role",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.356324Z",
            "done": false,
            "message": {
              "content": " role",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "-based",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.466205Z",
            "done": false,
            "message": {
              "content": "-based",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " agents",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.572152Z",
            "done": false,
            "message": {
              "content": " agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.679788Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " flexible",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.785657Z",
            "done": false,
            "message": {
              "content": " flexible",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " tools",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:57.891866Z",
            "done": false,
            "message": {
              "content": " tools",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.000259Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " intelligent",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.105467Z",
            "done": false,
            "message": {
              "content": " intelligent",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " collaboration",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.215317Z",
            "done": false,
            "message": {
              "content": " collaboration",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.320422Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " task",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.43758Z",
            "done": false,
            "message": {
              "content": " task",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " management",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.543136Z",
            "done": false,
            "message": {
              "content": " management",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.652612Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " and",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.764668Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " ext",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.873905Z",
            "done": false,
            "message": {
              "content": " ext",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and ext"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "ensible",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:58.982596Z",
            "done": false,
            "message": {
              "content": "ensible",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " design",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.087229Z",
            "done": false,
            "message": {
              "content": " design",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.200812Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " making",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.32252Z",
            "done": false,
            "message": {
              "content": " making",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " it",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.433494Z",
            "done": false,
            "message": {
              "content": " it",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " suitable",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.538224Z",
            "done": false,
            "message": {
              "content": " suitable",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it suitable"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " for",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.64658Z",
            "done": false,
            "message": {
              "content": " for",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it suitable for"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " production",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.755604Z",
            "done": false,
            "message": {
              "content": " production",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it suitable for production"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "-ready",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.860837Z",
            "done": false,
            "message": {
              "content": "-ready",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it suitable for production-ready"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " applications",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:53:59.971157Z",
            "done": false,
            "message": {
              "content": " applications",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it suitable for production-ready applications"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:00.085097Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it suitable for production-ready applications."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:00.195475Z",
            "done": true,
            "done_reason": "stop",
            "eval_count": 60,
            "eval_duration": 6464000000,
            "load_duration": 41615584,
            "message": {
              "content": "",
              "role": "assistant"
            },
            "model": "llama3.1",
            "prompt_eval_count": 1379,
            "prompt_eval_duration": 17787000000,
            "total_duration": 24294802209,
            "usage": {
              "completion_tokens": 60,
              "prompt_tokens": 1379,
              "total_tokens": 1439
            }
          },
          "text": "CrewAI appears to be a platform or framework for building autonomous teams of AI agents that can work together to achieve complex tasks and goals. It provides features such as role-based agents, flexible tools, intelligent collaboration, task management, and extensible design, making it suitable for production-ready applications."
        }
      ]
    },
    {
      "contexts": [
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3917,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "installation.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
              "file_size": 4038,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                "node_type": 4
              },
              "2": {
                "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "installation.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                  "file_size": 4038,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
                "node_type": 1
              },
              "3": {
                "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
                "metadata": {},
                "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
                "node_type": 1
              }
            },
            "start_char_idx": 1977,
            "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7432651616223774
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 16346,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "quickstart.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
              "file_size": 16608,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "88f33784-96e8-4707-a690-d419695abe03",
                "node_type": 4
              },
              "2": {
                "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "quickstart.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                  "file_size": 16608,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
                "node_type": 1
              },
              "3": {
                "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
                "metadata": {},
                "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
                "node_type": 1
              }
            },
            "start_char_idx": 14583,
            "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7150258915452291
        },
        {
          "node": {
            "embedding": null,
            "end_char_idx": 3539,
            "excluded_embed_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "excluded_llm_metadata_keys": [
              "file_name",
              "file_type",
              "file_size",
              "creation_date",
              "last_modified_date",
              "last_accessed_date"
            ],
            "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
            "metadata": {
              "creation_date": "2024-12-07",
              "file_name": "introduction.mdx",
              "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
              "file_size": 3585,
              "last_modified_date": "2024-12-07"
            },
            "metadata_separator": "\n",
            "metadata_seperator": "\n",
            "metadata_template": "{key}: {value}",
            "mimetype": "text/plain",
            "relationships": {
              "1": {
                "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
                "node_type": 4
              },
              "2": {
                "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
                "metadata": {
                  "creation_date": "2024-12-07",
                  "file_name": "introduction.mdx",
                  "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                  "file_size": 3585,
                  "last_modified_date": "2024-12-07"
                },
                "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
                "node_type": 1
              }
            },
            "start_char_idx": 1691,
            "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
            "text_template": "{metadata_str}\n\n{content}"
          },
          "score": 0.7070298707112223
        }
      ],
      "messages": "We have provided context information below.\n---------------------\nYou're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n\n### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.\n\nThe **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>\n---------------------\nGiven this information, please answer the question: How do I use CrewAI?\nDon't give an answer unless it is supported by the context above.\n",
      "response": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your experiences.",
      "stream_response": [
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "To",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:50.870865Z",
            "done": false,
            "message": {
              "content": "To",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " use",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:50.998773Z",
            "done": false,
            "message": {
              "content": " use",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:51.134459Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use Crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "AI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:51.255696Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:51.388951Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " you",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:51.508834Z",
            "done": false,
            "message": {
              "content": " you",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " can",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:51.649562Z",
            "done": false,
            "message": {
              "content": " can",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " follow",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:51.766641Z",
            "done": false,
            "message": {
              "content": " follow",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " these",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:51.882632Z",
            "done": false,
            "message": {
              "content": " these",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " steps",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.001301Z",
            "done": false,
            "message": {
              "content": " steps",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ":\n\n",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.131823Z",
            "done": false,
            "message": {
              "content": ":\n\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": 1,
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.248807Z",
            "done": false,
            "message": {
              "content": 1,
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.377697Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Install",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.495802Z",
            "done": false,
            "message": {
              "content": " Install",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.626814Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install Crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "AI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.746761Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " in",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.872669Z",
            "done": false,
            "message": {
              "content": " in",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " your",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:52.99081Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " development",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:53.120731Z",
            "done": false,
            "message": {
              "content": " development",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " environment",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:53.238159Z",
            "done": false,
            "message": {
              "content": " environment",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".\n",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:53.36729Z",
            "done": false,
            "message": {
              "content": ".\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": 2,
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:53.487272Z",
            "done": false,
            "message": {
              "content": 2,
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:53.614697Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Create",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:53.734536Z",
            "done": false,
            "message": {
              "content": " Create",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " a",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:53.862198Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " new",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:53.979069Z",
            "done": false,
            "message": {
              "content": " new",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " project",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:54.104056Z",
            "done": false,
            "message": {
              "content": " project",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " using",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:54.225507Z",
            "done": false,
            "message": {
              "content": " using",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " the",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:54.33625Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " `",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:54.448983Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:54.577037Z",
            "done": false,
            "message": {
              "content": "crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "ai",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:54.694092Z",
            "done": false,
            "message": {
              "content": "ai",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " create",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:54.80294Z",
            "done": false,
            "message": {
              "content": " create",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:54.930848Z",
            "done": false,
            "message": {
              "content": " crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " <project",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:55.178456Z",
            "done": false,
            "message": {
              "content": " <project",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "_name",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:55.306077Z",
            "done": false,
            "message": {
              "content": "_name",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ">`",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:55.431722Z",
            "done": false,
            "message": {
              "content": ">`",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>`"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " command",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:55.559395Z",
            "done": false,
            "message": {
              "content": " command",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".\n",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:55.68573Z",
            "done": false,
            "message": {
              "content": ".\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": 3,
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:55.799797Z",
            "done": false,
            "message": {
              "content": 3,
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:55.928376Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Customize",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:56.04863Z",
            "done": false,
            "message": {
              "content": " Customize",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " your",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:56.163875Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " project",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:56.282602Z",
            "done": false,
            "message": {
              "content": " project",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " by",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:56.410751Z",
            "done": false,
            "message": {
              "content": " by",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " editing",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:56.523539Z",
            "done": false,
            "message": {
              "content": " editing",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " the",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:56.657066Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " essential",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:56.771484Z",
            "done": false,
            "message": {
              "content": " essential",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " files",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:56.899619Z",
            "done": false,
            "message": {
              "content": " files",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " such",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:57.011696Z",
            "done": false,
            "message": {
              "content": " such",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " as",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:57.139453Z",
            "done": false,
            "message": {
              "content": " as",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " `",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:57.258236Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "agents",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:57.388888Z",
            "done": false,
            "message": {
              "content": "agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".yaml",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:57.505405Z",
            "done": false,
            "message": {
              "content": ".yaml",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "`,",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:57.639122Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " `",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:57.758617Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "tasks",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:57.889708Z",
            "done": false,
            "message": {
              "content": "tasks",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".yaml",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:58.008298Z",
            "done": false,
            "message": {
              "content": ".yaml",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "`,",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:58.139879Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " and",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:58.260285Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " `.",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:58.39567Z",
            "done": false,
            "message": {
              "content": " `.",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "env",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:58.516159Z",
            "done": false,
            "message": {
              "content": "env",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "`.\n",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:58.65367Z",
            "done": false,
            "message": {
              "content": "`.\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": 4,
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:58.773475Z",
            "done": false,
            "message": {
              "content": 4,
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:58.90614Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Define",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:59.023178Z",
            "done": false,
            "message": {
              "content": " Define",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " your",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:59.160934Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " AI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:59.282606Z",
            "done": false,
            "message": {
              "content": " AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " agents",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:59.421047Z",
            "done": false,
            "message": {
              "content": " agents",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:59.545846Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " tasks",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:59.671717Z",
            "done": false,
            "message": {
              "content": " tasks",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:59.801331Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " and",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:54:59.923062Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " workflows",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:00.058778Z",
            "done": false,
            "message": {
              "content": " workflows",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " using",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:00.185198Z",
            "done": false,
            "message": {
              "content": " using",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " annotations",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:00.319896Z",
            "done": false,
            "message": {
              "content": " annotations",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " like",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:00.454666Z",
            "done": false,
            "message": {
              "content": " like",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " `",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:00.591243Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "@",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:00.721489Z",
            "done": false,
            "message": {
              "content": "@",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "agent",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:00.851442Z",
            "done": false,
            "message": {
              "content": "agent",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "`,",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:00.985268Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " `",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:01.106039Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "@",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:01.238015Z",
            "done": false,
            "message": {
              "content": "@",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "task",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:01.374515Z",
            "done": false,
            "message": {
              "content": "task",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "`,",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:01.503711Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " `",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:01.640317Z",
            "done": false,
            "message": {
              "content": " `",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "@",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:01.771199Z",
            "done": false,
            "message": {
              "content": "@",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:01.906803Z",
            "done": false,
            "message": {
              "content": "crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "`,",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:02.033055Z",
            "done": false,
            "message": {
              "content": "`,",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " etc",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:02.174712Z",
            "done": false,
            "message": {
              "content": " etc",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".\n",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:02.313169Z",
            "done": false,
            "message": {
              "content": ".\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": 5,
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:02.45095Z",
            "done": false,
            "message": {
              "content": 5,
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:02.591173Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Use",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:02.724108Z",
            "done": false,
            "message": {
              "content": " Use",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " the",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:02.863672Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:02.998487Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the Crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "AI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:03.138378Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " CLI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:03.269955Z",
            "done": false,
            "message": {
              "content": " CLI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " commands",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:03.406671Z",
            "done": false,
            "message": {
              "content": " commands",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " to",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:03.536414Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " manage",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:03.678437Z",
            "done": false,
            "message": {
              "content": " manage",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " your",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:03.817904Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:03.955942Z",
            "done": false,
            "message": {
              "content": " crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:04.094367Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " such",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:04.227464Z",
            "done": false,
            "message": {
              "content": " such",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " as",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:04.353879Z",
            "done": false,
            "message": {
              "content": " as",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " replay",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:04.479766Z",
            "done": false,
            "message": {
              "content": " replay",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replay"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "ing",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:04.612309Z",
            "done": false,
            "message": {
              "content": "ing",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " tasks",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:04.742844Z",
            "done": false,
            "message": {
              "content": " tasks",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " from",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:04.862453Z",
            "done": false,
            "message": {
              "content": " from",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " the",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:04.994259Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " last",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:05.131581Z",
            "done": false,
            "message": {
              "content": " last",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " run",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:05.260697Z",
            "done": false,
            "message": {
              "content": " run",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " or",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:05.395712Z",
            "done": false,
            "message": {
              "content": " or",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " resetting",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:05.51995Z",
            "done": false,
            "message": {
              "content": " resetting",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " the",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:05.660962Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:05.783536Z",
            "done": false,
            "message": {
              "content": " crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "'s",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:05.92393Z",
            "done": false,
            "message": {
              "content": "'s",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " memory",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:06.06276Z",
            "done": false,
            "message": {
              "content": " memory",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".\n\n",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:06.193838Z",
            "done": false,
            "message": {
              "content": ".\n\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\n"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "You",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:06.315781Z",
            "done": false,
            "message": {
              "content": "You",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " can",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:06.438496Z",
            "done": false,
            "message": {
              "content": " can",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " also",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:06.572445Z",
            "done": false,
            "message": {
              "content": " also",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " deploy",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:06.703931Z",
            "done": false,
            "message": {
              "content": " deploy",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " your",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:06.838201Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " project",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:06.970008Z",
            "done": false,
            "message": {
              "content": " project",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " on",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:07.10413Z",
            "done": false,
            "message": {
              "content": " on",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:07.232854Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on Crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "AI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:07.370074Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Enterprise",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:07.496262Z",
            "done": false,
            "message": {
              "content": " Enterprise",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " for",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:07.634966Z",
            "done": false,
            "message": {
              "content": " for",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " a",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:07.761645Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " production",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:07.896701Z",
            "done": false,
            "message": {
              "content": " production",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "-ready",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:08.018732Z",
            "done": false,
            "message": {
              "content": "-ready",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " environment",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:08.156019Z",
            "done": false,
            "message": {
              "content": " environment",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " with",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:08.279247Z",
            "done": false,
            "message": {
              "content": " with",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " just",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:08.418339Z",
            "done": false,
            "message": {
              "content": " just",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " a",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:08.552463Z",
            "done": false,
            "message": {
              "content": " a",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " few",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:08.687226Z",
            "done": false,
            "message": {
              "content": " few",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " clicks",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:08.821638Z",
            "done": false,
            "message": {
              "content": " clicks",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".\n\n",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:08.956664Z",
            "done": false,
            "message": {
              "content": ".\n\n",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\n"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "Additionally",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:09.086042Z",
            "done": false,
            "message": {
              "content": "Additionally",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:09.216018Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " you",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:09.352361Z",
            "done": false,
            "message": {
              "content": " you",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " can",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:09.483575Z",
            "done": false,
            "message": {
              "content": " can",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " join",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:09.611913Z",
            "done": false,
            "message": {
              "content": " join",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " the",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:09.738294Z",
            "done": false,
            "message": {
              "content": " the",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " Crew",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:09.858919Z",
            "done": false,
            "message": {
              "content": " Crew",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the Crew"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "AI",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:09.98462Z",
            "done": false,
            "message": {
              "content": "AI",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " community",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:10.118951Z",
            "done": false,
            "message": {
              "content": " community",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " to",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:10.243476Z",
            "done": false,
            "message": {
              "content": " to",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " connect",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:10.37966Z",
            "done": false,
            "message": {
              "content": " connect",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " with",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:10.504523Z",
            "done": false,
            "message": {
              "content": " with",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " other",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:10.640003Z",
            "done": false,
            "message": {
              "content": " other",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " developers",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:10.768438Z",
            "done": false,
            "message": {
              "content": " developers",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:10.908548Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " get",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:11.040357Z",
            "done": false,
            "message": {
              "content": " get",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " help",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:11.18242Z",
            "done": false,
            "message": {
              "content": " help",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ",",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:11.31953Z",
            "done": false,
            "message": {
              "content": ",",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help,"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " and",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:11.453878Z",
            "done": false,
            "message": {
              "content": " and",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " share",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:11.589122Z",
            "done": false,
            "message": {
              "content": " share",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " your",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:11.723696Z",
            "done": false,
            "message": {
              "content": " your",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": " experiences",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:11.860579Z",
            "done": false,
            "message": {
              "content": " experiences",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your experiences"
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": ".",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:11.990257Z",
            "done": false,
            "message": {
              "content": ".",
              "role": "assistant"
            },
            "model": "llama3.1"
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your experiences."
        },
        {
          "additional_kwargs": {
            "tool_calls": []
          },
          "delta": "",
          "logprobs": null,
          "raw": {
            "created_at": "2024-12-09T18:55:12.128904Z",
            "done": true,
            "done_reason": "stop",
            "eval_count": 166,
            "eval_duration": 21268000000,
            "load_duration": 27218125,
            "message": {
              "content": "",
              "role": "assistant"
            },
            "model": "llama3.1",
            "prompt_eval_count": 1381,
            "prompt_eval_duration": 21459000000,
            "total_duration": 42757215042,
            "usage": {
              "completion_tokens": 166,
              "prompt_tokens": 1381,
              "total_tokens": 1547
            }
          },
          "text": "To use CrewAI, you can follow these steps:\n\n1. Install CrewAI in your development environment.\n2. Create a new project using the `crewai create crew <project_name>` command.\n3. Customize your project by editing the essential files such as `agents.yaml`, `tasks.yaml`, and `.env`.\n4. Define your AI agents, tasks, and workflows using annotations like `@agent`, `@task`, `@crew`, etc.\n5. Use the CrewAI CLI commands to manage your crew, such as replaying tasks from the last run or resetting the crew's memory.\n\nYou can also deploy your project on CrewAI Enterprise for a production-ready environment with just a few clicks.\n\nAdditionally, you can join the CrewAI community to connect with other developers, get help, and share your experiences."
        }
      ]
    }
  ],
  "rerank": {
    "flag": {
      "query": "How do I use CrewAI?",
      "response": {
        "metadata": {
          "6672642f-5ca9-4a54-bd06-ca30b282d0ab": {
            "creation_date": "2024-12-07",
            "file_name": "introduction.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
            "file_size": 3585,
            "last_modified_date": "2024-12-07"
          },
          "a8c07938-c80c-4558-966c-d9cb56057f36": {
            "creation_date": "2024-12-07",
            "file_name": "quickstart.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
            "file_size": 16608,
            "last_modified_date": "2024-12-07"
          },
          "b2704ea8-6980-47ce-bd68-7ced36a6565e": {
            "creation_date": "2024-12-07",
            "file_name": "quickstart.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
            "file_size": 16608,
            "last_modified_date": "2024-12-07"
          },
          "c36ffb47-e43b-4021-8265-693075bc839b": {
            "creation_date": "2024-12-07",
            "file_name": "installation.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
            "file_size": 4038,
            "last_modified_date": "2024-12-07"
          },
          "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8": {
            "creation_date": "2024-12-07",
            "file_name": "installation.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
            "file_size": 4038,
            "last_modified_date": "2024-12-07"
          },
          "f5190999-0daf-4e6d-9cfb-d7ba4ad88411": {
            "creation_date": "2024-12-07",
            "file_name": "introduction.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
            "file_size": 3585,
            "last_modified_date": "2024-12-07"
          }
        },
        "response": "You can use CrewAI by following our quickstart guide to create your first agent and get hands-on experience. Additionally, you can join our community to connect with other developers, get help, and share your experiences.",
        "source_nodes": [
          {
            "node": {
              "embedding": null,
              "end_char_idx": 3539,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "introduction.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                "file_size": 3585,
                "last_modified_date": "2024-12-07"
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "introduction.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                    "file_size": 3585,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
                  "node_type": 4
                },
                "2": {
                  "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "introduction.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                    "file_size": 3585,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
                  "node_type": 1
                }
              },
              "start_char_idx": 1691,
              "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 4.413860321044922
          },
          {
            "node": {
              "embedding": null,
              "end_char_idx": 16346,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "quickstart.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                "file_size": 16608,
                "last_modified_date": "2024-12-07"
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "quickstart.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                    "file_size": 16608,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "88f33784-96e8-4707-a690-d419695abe03",
                  "node_type": 4
                },
                "2": {
                  "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "quickstart.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                    "file_size": 16608,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
                  "node_type": 1
                },
                "3": {
                  "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
                  "metadata": {},
                  "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
                  "node_type": 1
                }
              },
              "start_char_idx": 14583,
              "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 3.305917263031006
          },
          {
            "node": {
              "embedding": null,
              "end_char_idx": 3917,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "installation.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                "file_size": 4038,
                "last_modified_date": "2024-12-07"
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "installation.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                    "file_size": 4038,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                  "node_type": 4
                },
                "2": {
                  "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "installation.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                    "file_size": 4038,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
                  "node_type": 1
                },
                "3": {
                  "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
                  "metadata": {},
                  "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
                  "node_type": 1
                }
              },
              "start_char_idx": 1977,
              "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 1.467395305633545
          }
        ]
      }
    },
    "llm": {
      "query": "How do I use CrewAI?",
      "response": {
        "metadata": {
          "6672642f-5ca9-4a54-bd06-ca30b282d0ab": {
            "creation_date": "2024-12-07",
            "file_name": "introduction.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
            "file_size": 3585,
            "last_modified_date": "2024-12-07"
          },
          "b2704ea8-6980-47ce-bd68-7ced36a6565e": {
            "creation_date": "2024-12-07",
            "file_name": "quickstart.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
            "file_size": 16608,
            "last_modified_date": "2024-12-07"
          },
          "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8": {
            "creation_date": "2024-12-07",
            "file_name": "installation.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
            "file_size": 4038,
            "last_modified_date": "2024-12-07"
          }
        },
        "response": "To get started with CrewAI, you can follow our quickstart guide to create your first CrewAI agent and get hands-on experience. You can also join the community to connect with other developers, get help, and share your CrewAI experiences. Additionally, you can install CrewAI in your development environment by following the installation instructions.",
        "source_nodes": [
          {
            "node": {
              "embedding": null,
              "end_char_idx": 3917,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "installation.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                "file_size": 4038,
                "last_modified_date": "2024-12-07"
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "installation.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                    "file_size": 4038,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                  "node_type": 4
                },
                "2": {
                  "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "installation.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                    "file_size": 4038,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
                  "node_type": 1
                },
                "3": {
                  "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
                  "metadata": {},
                  "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
                  "node_type": 1
                }
              },
              "start_char_idx": 1977,
              "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 0.7432651616223774
          },
          {
            "node": {
              "embedding": null,
              "end_char_idx": 3539,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "introduction.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                "file_size": 3585,
                "last_modified_date": "2024-12-07"
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "introduction.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                    "file_size": 3585,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
                  "node_type": 4
                },
                "2": {
                  "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "introduction.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                    "file_size": 3585,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
                  "node_type": 1
                }
              },
              "start_char_idx": 1691,
              "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 0.7070298707112223
          },
          {
            "node": {
              "embedding": null,
              "end_char_idx": 16346,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "quickstart.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                "file_size": 16608,
                "last_modified_date": "2024-12-07"
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "quickstart.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                    "file_size": 16608,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "88f33784-96e8-4707-a690-d419695abe03",
                  "node_type": 4
                },
                "2": {
                  "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "quickstart.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                    "file_size": 16608,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
                  "node_type": 1
                },
                "3": {
                  "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
                  "metadata": {},
                  "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
                  "node_type": 1
                }
              },
              "start_char_idx": 14583,
              "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 0.7150258915452291
          }
        ]
      }
    },
    "sentence": {
      "query": "How do I use CrewAI?",
      "response": {
        "metadata": {
          "6672642f-5ca9-4a54-bd06-ca30b282d0ab": {
            "creation_date": "2024-12-07",
            "file_name": "introduction.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
            "file_size": 3585,
            "last_modified_date": "2024-12-07",
            "retrieval_score": 0.7070298707112223
          },
          "b2704ea8-6980-47ce-bd68-7ced36a6565e": {
            "creation_date": "2024-12-07",
            "file_name": "quickstart.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
            "file_size": 16608,
            "last_modified_date": "2024-12-07",
            "retrieval_score": 0.7150258915452291
          },
          "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8": {
            "creation_date": "2024-12-07",
            "file_name": "installation.mdx",
            "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
            "file_size": 4038,
            "last_modified_date": "2024-12-07",
            "retrieval_score": 0.7432651616223774
          }
        },
        "response": "You're ready to create your first crew. We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks. To get started, you can generate a new project structure by running the CrewAI CLI command `crewai create crew <project_name>`. This will create a basic project with essential files such as `agents.yaml`, `tasks.yaml`, `.env`, `main.py`, `crew.py`, and a directory for custom agent tools. You can then customize your project by editing these files to define your AI agents, tasks, and workflows.",
        "source_nodes": [
          {
            "node": {
              "embedding": null,
              "end_char_idx": 3539,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "6672642f-5ca9-4a54-bd06-ca30b282d0ab",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "introduction.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                "file_size": 3585,
                "last_modified_date": "2024-12-07",
                "retrieval_score": 0.7070298707112223
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "1c341d5f413a527cb141856eead1038ea209b2442fb1d5156e5e6870d575c129",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "introduction.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                    "file_size": 3585,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "49f0c7b2-fafd-49b9-b305-14aac4c3f984",
                  "node_type": 4
                },
                "2": {
                  "hash": "fbcd2cfeb2c348f4c3fd67041cc88cc4e2c0792b4804c9123f54d7123597a3ea",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "introduction.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/introduction.mdx",
                    "file_size": 3585,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "6e2fc391-45a2-4114-b431-70344a0a132c",
                  "node_type": 1
                }
              },
              "start_char_idx": 1691,
              "text": "The **Crew** organizes the overall operation\n2. **AI Agents** work on their specialized tasks\n3. The **Process** ensures smooth collaboration\n4. **Tasks** get completed to achieve the goal\n\n## Key Features\n\n<CardGroup cols={2}>\n  <Card title=\"Role-Based Agents\" icon=\"users\">\n    Create specialized agents with defined roles, expertise, and goals - from researchers to analysts to writers\n  </Card>\n  <Card title=\"Flexible Tools\" icon=\"screwdriver-wrench\">\n    Equip agents with custom tools and APIs to interact with external services and data sources\n  </Card>\n  <Card title=\"Intelligent Collaboration\" icon=\"people-arrows\">\n    Agents work together, sharing insights and coordinating tasks to achieve complex objectives\n  </Card>\n  <Card title=\"Task Management\" icon=\"list-check\">\n    Define sequential or parallel workflows, with agents automatically handling task dependencies\n  </Card>\n</CardGroup>\n\n## Why Choose CrewAI?\n\n- \ud83e\udde0 **Autonomous Operation**: Agents make intelligent decisions based on their roles and available tools\n- \ud83d\udcdd **Natural Interaction**: Agents communicate and collaborate like human team members\n- \ud83d\udee0\ufe0f **Extensible Design**: Easy to add new tools, roles, and capabilities\n- \ud83d\ude80 **Production Ready**: Built for reliability and scalability in real-world applications\n\n<CardGroup cols={3}>\n  <Card\n    title=\"Install CrewAI\"\n    icon=\"wrench\"\n    href=\"/installation\"\n  >\n    Get started with CrewAI in your development environment.\n  </Card>\n  <Card\n    title=\"Quick Start\"\n    icon=\"bolt\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.\n  </Card>\n</CardGroup>",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 0.6411206722259521
          },
          {
            "node": {
              "embedding": null,
              "end_char_idx": 16346,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "b2704ea8-6980-47ce-bd68-7ced36a6565e",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "quickstart.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                "file_size": 16608,
                "last_modified_date": "2024-12-07",
                "retrieval_score": 0.7150258915452291
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "c061c843b15ea8073207cdb830b4725406a687b1b97a38412d2f9897d0efed67",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "quickstart.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                    "file_size": 16608,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "88f33784-96e8-4707-a690-d419695abe03",
                  "node_type": 4
                },
                "2": {
                  "hash": "0bf6539b1ce605b18a4a1bd2a4e3e1e48878f89a9dd5672b434340675f302f31",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "quickstart.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/quickstart.mdx",
                    "file_size": 16608,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "8747af65-8914-48c7-b914-a5dffdc4b6ef",
                  "node_type": 1
                },
                "3": {
                  "hash": "7fa27524f482f1ebef87a7305ffeefd9371df1b73edcef06ee983dfdbd166a74",
                  "metadata": {},
                  "node_id": "cd0864c4-72c6-447e-8999-78f388a747ab",
                  "node_type": 1
                }
              },
              "start_char_idx": 14583,
              "text": "### Annotations include:\n\n* `@agent`\n* `@task`\n* `@crew`\n* `@tool`\n* `@before_kickoff`\n* `@after_kickoff`\n* `@callback`\n* `@output_json`\n* `@output_pydantic`\n* `@cache_handler`\n\n```python crew.py\n# ...\n@agent\ndef email_summarizer(self) -> Agent:\n    return Agent(\n        config=self.agents_config[\"email_summarizer\"],\n    )\n\n@task\ndef email_summarizer_task(self) -> Task:\n    return Task(\n        config=self.tasks_config[\"email_summarizer_task\"],\n    )\n# ...\n```\n\n<Tip>\nIn addition to the [sequential process](../how-to/sequential-process), you can use the [hierarchical process](../how-to/hierarchical-process),\nwhich automatically assigns a manager to the defined crew to properly coordinate the planning and execution of tasks through delegation and validation of results.\nYou can learn more about the core concepts [here](/concepts).\n</Tip>\n\n### Replay Tasks from Latest Crew Kickoff\n\nCrewAI now includes a replay feature that allows you to list the tasks from the last run and replay from a specific one. To use this feature, run.\n\n```shell\ncrewai replay <task_id>\n```\n\nReplace `<task_id>` with the ID of the task you want to replay.\n\n### Reset Crew Memory\n\nIf you need to reset the memory of your crew before running it again, you can do so by calling the reset memory feature:\n\n```shell\ncrewai reset-memories --all\n```\n\nThis will clear the crew's memory, allowing for a fresh start.\n\n## Deploying Your Project\n\nThe easiest way to deploy your crew is through CrewAI Enterprise, where you can deploy your crew in a few clicks.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Deploy on Enterprise\"\n    icon=\"rocket\"\n    href=\"http://app.crewai.com\"\n  >\n    Get started with CrewAI Enterprise and deploy your crew in a production environment with just a few clicks.",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 0.6395506262779236
          },
          {
            "node": {
              "embedding": null,
              "end_char_idx": 3917,
              "excluded_embed_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "excluded_llm_metadata_keys": [
                "file_name",
                "file_type",
                "file_size",
                "creation_date",
                "last_modified_date",
                "last_accessed_date"
              ],
              "id_": "edf07cf0-8d4e-4d00-89b9-cc7164c4bcc8",
              "metadata": {
                "creation_date": "2024-12-07",
                "file_name": "installation.mdx",
                "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                "file_size": 4038,
                "last_modified_date": "2024-12-07",
                "retrieval_score": 0.7432651616223774
              },
              "metadata_separator": "\n",
              "metadata_seperator": "\n",
              "metadata_template": "{key}: {value}",
              "mimetype": "text/plain",
              "relationships": {
                "1": {
                  "hash": "c9dbc4ecaec90e4bb161022fe7184c6f0d44cdc1628d9f2f57434f621eb63353",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "installation.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                    "file_size": 4038,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "291e3dad-0e08-4aef-bfad-fd06404175dc",
                  "node_type": 4
                },
                "2": {
                  "hash": "3677eb34df7ece9917af53868cd6ee88f5ac642c04998ad1ff049eac9825fca8",
                  "metadata": {
                    "creation_date": "2024-12-07",
                    "file_name": "installation.mdx",
                    "file_path": "/Users/jethroestrada/Desktop/External_Projects/AI/chatbot/open-webui/backend/crewAI/docs/installation.mdx",
                    "file_size": 4038,
                    "last_modified_date": "2024-12-07"
                  },
                  "node_id": "408b1edc-04e4-40c5-b157-b817ff51a5b9",
                  "node_type": 1
                },
                "3": {
                  "hash": "89fe921693268bd0439c7ba190b7700c437f7ea8606513144783f144e00fe394",
                  "metadata": {},
                  "node_id": "ecaf5956-b0c9-4361-8547-4872557f75ab",
                  "node_type": 1
                }
              },
              "start_char_idx": 1977,
              "text": "You're ready to create your first crew.</Check>\n    </Step>\n</Steps>\n\n# Creating a New Project\n\n<Info>\n  We recommend using the YAML Template scaffolding for a structured approach to defining agents and tasks.\n</Info>\n\n<Steps>\n  <Step title=\"Generate Project Structure\">\n    Run the CrewAI CLI command:\n    ```shell Terminal\n    crewai create crew <project_name>\n    ```\n\n    This creates a new project with the following structure:\n    <Frame>\n    ```\n    my_project/\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 pyproject.toml\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 .env\n    \u2514\u2500\u2500 src/\n        \u2514\u2500\u2500 my_project/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 crew.py\n            \u251c\u2500\u2500 tools/\n            \u2502   \u251c\u2500\u2500 custom_tool.py\n            \u2502   \u2514\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 config/\n                \u251c\u2500\u2500 agents.yaml\n                \u2514\u2500\u2500 tasks.yaml\n    ```\n    </Frame>\n  </Step>   \n\n  <Step title=\"Customize Your Project\">\n    Your project will contain these essential files:\n\n    | File | Purpose |\n    | --- | --- |\n    | `agents.yaml` | Define your AI agents and their roles |\n    | `tasks.yaml` | Set up agent tasks and workflows |\n    | `.env` | Store API keys and environment variables |\n    | `main.py` | Project entry point and execution flow |\n    | `crew.py` | Crew orchestration and coordination |\n    | `tools/` | Directory for custom agent tools |\n\n    <Tip>\n      Start by editing `agents.yaml` and `tasks.yaml` to define your crew's behavior.\n      Keep sensitive information like API keys in `.env`.\n    </Tip>\n  </Step>\n</Steps>\n\n## Next Steps\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Build Your First Agent\"\n    icon=\"code\"\n    href=\"/quickstart\"\n  >\n    Follow our quickstart guide to create your first CrewAI agent and get hands-on experience.\n  </Card>\n  <Card\n    title=\"Join the Community\"\n    icon=\"comments\"\n    href=\"https://community.crewai.com\"\n  >\n    Connect with other developers, get help, and share your CrewAI experiences.",
              "text_template": "{metadata_str}\n\n{content}"
            },
            "score": 0.6131642460823059
          }
        ]
      }
    }
  },
  "settings": {
    "base_url": "http://localhost:11434",
    "chunk_overlap": 50,
    "chunk_size": 512,
    "embedding_model": "nomic-embed-text",
    "llm_model": "llama3.1"
  }
}